{"version":3,"sources":["helpers/loadedMessageHandler.js","assets/faceMeshTemplate.png","helpers/FaceMeshMaterial.js","components/Scene.js","components/Text.js","App.js","reportWebVitals.js","index.jsx"],"names":["loadedMessageHandler","document","querySelector","classList","add","FaceMeshMaterial","faceMapTexture","useLoader","TextureLoader","faceMeshTemplate","transparent","map","twgl","window","Scene","mouse","nMouse","useState","canvasExist","setCanvasExist","isMobile","setIsMobile","trackerGroup","useRef","zapparCam","sizes","width","innerWidth","height","innerHeight","canvas","widthHalf","heightHalf","createElement","className","gl","getContext","body","appendChild","originalImage","originalTexture","createTexture","src","crossOrigin","err","texture","source","originalTexture1","originalTexture2","mapTexture","mapTexture1","mapTexture2","programInfo","createProgramInfo","bufferInfo","primitives","createXYQuadBufferInfo","demo1Button","demo2Button","addEventListener","event","currTime","canvasTex","THREE","vector","prevTime","useFrame","clock","getElapsedTime","current","position","x","setFromMatrixPosition","matrixWorld","project","y","resizeCanvasToDisplaySize","viewport","clearColor","clear","COLOR_BUFFER_BIT","useProgram","program","setBuffersAndAttributes","canvasAspect","imageAspect","mat","setUniforms","u_matrix","u_originalImage","u_mapImage","u_mouse","drawBufferInfo","needsUpdate","GPUTier","useDetectGPU","useEffect","tier","style","name","userFacing","userCameraMirrorMode","makeDefault","renderPriority","ref","onVisible","fallback","scale","OrbitControls","enableZoom","enablePan","enableKeys","rotation","Math","PI","args","side","Text","alt","App","camera","fov","linear","flat","AdaptiveDpr","pixelated","AdaptiveEvents","Stats","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.11c50632.chunk.js","sourcesContent":["\nconst loadedMessageHandler = () => {\n\n\tconst targetNode = document.querySelector('.text-container');\n\n\ttargetNode.classList.add('is-loaded')\n}\n\nexport default loadedMessageHandler","export default __webpack_public_path__ + \"static/media/faceMeshTemplate.6e15d49f.png\";","import { useLoader } from '@react-three/fiber';\nimport { TextureLoader } from 'three';\nimport faceMeshTemplate from '../assets/faceMeshTemplate.png';\n\nconst FaceMeshMaterial = () => {\n    const faceMapTexture = useLoader(TextureLoader, faceMeshTemplate);\n    return <meshStandardMaterial transparent map={faceMapTexture} />;\n}\n\nexport default FaceMeshMaterial","import React, { Suspense, useRef, useState, useEffect } from 'react'\nimport { useFrame } from '@react-three/fiber'\nimport { FaceBufferGeometry, FaceTracker, ZapparCamera } from '@zappar/zappar-react-three-fiber'\nimport * as THREE from 'three'\nimport { OrbitControls, useDetectGPU } from '@react-three/drei'\n\nimport loadedMessageHandler  from '../helpers/loadedMessageHandler.js'\nimport FaceMeshMaterial  from '../helpers/FaceMeshMaterial.js'\n\n\nconst twgl = window.twgl\n\nconst m3scaling = (sx, sy) => {\n\treturn [sx, 0, 0, 0, sy, 0, 0, 0, 1]\n}\n\nexport default function Scene({ ...props }) {\n\tlet mouse = [0, 0]\n\tlet nMouse = [0, 0]\n\n\tconst [canvasExist, setCanvasExist] = useState(false)\n\tconst [isMobile, setIsMobile] = useState(true)\n\n\tconst trackerGroup = useRef()\n\tconst zapparCam = useRef()\n\t\n\t/**\n\t * Sizes\n\t */\n\tconst sizes = {}\n\tsizes.width = window.innerWidth\n\tsizes.height = window.innerHeight\n\tlet widthHalf = sizes.width / 2\n\tlet heightHalf = sizes.height / 2\n\n\tlet canvas\n\n\tif (canvasExist === false) {\n\t\tcanvas = document.createElement('canvas')\n\t\tsetCanvasExist(true)\n\t} else { \n\t\t// Grab existing canvas. Before, new canvas was being created every rerender. \n\t\tcanvas = document.querySelector('.canvas')\n\t}\n\n\tcanvas.className = 'canvas'\n\tconst gl = canvas.getContext('webgl')\n\tdocument.body.appendChild(canvas)\n\n\tlet originalImage = { width: 1, height: 1 } // replaced after loading\n\tlet originalTexture = twgl.createTexture(\n\t\tgl,\n\t\t{\n\t\t\tsrc: isMobile ? 'mobile-images/lake.jpg' : 'images/lake.jpg',\n\t\t\tcrossOrigin: '',\n\t\t},\n\t\t(err, texture, source) => {\n\t\t\toriginalImage = source\n\t\t}\n\t)\n\n\tlet originalTexture1 = twgl.createTexture(\n\t\tgl,\n\t\t{\n\t\t\tsrc: isMobile ? 'mobile-images/lake.jpg' : 'images/lake.jpg',\n\t\t\tcrossOrigin: '',\n\t\t},\n\t\t(err, texture, source) => {\n\t\t\toriginalImage = source\n\t\t}\n\t)\n\n\tlet originalTexture2 = twgl.createTexture(\n\t\tgl,\n\t\t{\n\t\t\tsrc: isMobile ? 'mobile-images/space-station.jpg' : 'images/space-station.jpg',\n\t\t\tcrossOrigin: '',\n\t\t},\n\t\t(err, texture, source) => {\n\t\t\toriginalImage = source\n\t\t}\n\t)\n\n\tlet mapTexture = twgl.createTexture(gl, {\n\t\tsrc: isMobile ? 'mobile-images/lake-map-blurred.jpg' : 'images/lake-map-blurred.jpg',\n\t\tcrossOrigin: '',\n\t})\n\n\tlet mapTexture1 = twgl.createTexture(gl, {\n\t\tsrc: isMobile ? 'mobile-images/lake-map-blurred.jpg' : 'images/lake-map-blurred.jpg',\n\t\tcrossOrigin: '',\n\t})\n\n\tlet mapTexture2 = twgl.createTexture(gl, {\n\t\tsrc: isMobile ? 'mobile-images/space-station-map.jpg' : 'images/space-station-map.jpg',\n\t\tcrossOrigin: '',\n\t})\n\n\t// compile shaders, link program, lookup location\n\tconst programInfo = twgl.createProgramInfo(gl, ['vs', 'fs'])\n\n\t// calls gl.createBuffer, gl.bindBuffer, gl.bufferData for a quad\n\tconst bufferInfo = twgl.primitives.createXYQuadBufferInfo(gl)\n\n\tconst demo1Button = document.querySelector('.demo-1')\n\tconst demo2Button = document.querySelector('.demo-2')\n\n\tdemo1Button.addEventListener('click', (event) => {\n\t\toriginalTexture = originalTexture1\n\t\tmapTexture = mapTexture1\n\t})\n\n\tdemo2Button.addEventListener('click', (event) => {\n\t\toriginalTexture = originalTexture2\n\t\tmapTexture = mapTexture2\n\t})\n\n\tlet canvasTex = new THREE.CanvasTexture(gl.canvas)\n\n\tlet vector = new THREE.Vector3()\n\tlet prevTime = 0\n\tlet currTime\n\tlet interval = 0.05 // 50 Milliseconds\n\n\tuseFrame(({ clock }) => { \n\t\tcurrTime = clock.getElapsedTime()\n\n\t\tif (trackerGroup.current && zapparCam.current) {\n\t\t\tif (trackerGroup.current.position.x !== 0) {\n\t\t\t\tif (currTime - prevTime > interval) {\n\t\t\t\t\tprevTime = clock.getElapsedTime()\n\t\t\t\t\t\n\t\t\t\t\tvector.setFromMatrixPosition(trackerGroup.current.matrixWorld).project(zapparCam.current)\n\n\t\t\t\t\tvector.x = (vector.x * widthHalf) + widthHalf\n\t\t\t\t\tvector.y = - (vector.y * heightHalf) + heightHalf\t\n\t\t\t\t\t\n\t\t\t\t\tmouse[0] = -((vector.x / sizes.width) * 2 - 1) * 0.05\n\t\t\t\t\tmouse[1] = ((vector.y / sizes.height) * 2 - 1) * 0.05\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}) \n\n\tuseFrame(() => {\n\t\ttwgl.resizeCanvasToDisplaySize(canvas)\n\n\t\tgl.viewport(0, 0, canvas.width, canvas.height)\n\n\t\tgl.clearColor(0, 0, 0, 0)\n\t\tgl.clear(gl.COLOR_BUFFER_BIT)\n\t\tgl.useProgram(programInfo.program)\n\n\t\t// calls gl.bindBuffer, gl.enableVertexAttribArray, gl.vertexAttribPointer\n\t\ttwgl.setBuffersAndAttributes(gl, programInfo, bufferInfo)\n\n\t\tconst canvasAspect = canvas.width / canvas.height\n\t\tconst imageAspect = originalImage.width / originalImage.height\n\t\tconst mat = m3scaling(imageAspect / canvasAspect, -1)\n\n\t\tnMouse[0] += (mouse[0] - nMouse[0]) * 0.05\n\t\tnMouse[1] += (mouse[1] - nMouse[1]) * 0.05\n\n\t\t// calls gl.activeTexture, gl.bindTexture, gl.uniformXXX\n\t\ttwgl.setUniforms(programInfo, {\n\t\t\tu_matrix: mat,\n\t\t\tu_originalImage: originalTexture,\n\t\t\tu_mapImage: mapTexture,\n\t\t\tu_mouse: nMouse,\n\t\t})\n\t\t// calls gl.drawArrays or gl.drawElements\n\t\ttwgl.drawBufferInfo(gl, bufferInfo)\n\n\t\tcanvasTex.needsUpdate = true\n\t})\n\n\tconst GPUTier = useDetectGPU()\n  \t// show a fallback for mobile or lowest tier GPUs\n\t\n\tuseEffect(() => { \n\t\tif (GPUTier) { \n\t\t\tif (GPUTier.tier === \"0\" || GPUTier.isMobile) {\n\t\t\t\tsetIsMobile(true)\n\t\t\t} else { \n\t\t\t\tsetIsMobile(false)\n\t\t\t}\n\t\t}\n\t}, [GPUTier, demo1Button.style])\n\n\treturn (\n\t\t<>\n\t\t\t<ZapparCamera\n\t\t\t\tname='ZapparCamera'\n\t\t\t\tuserFacing\n\t\t\t\tuserCameraMirrorMode=\"css\"\n\t\t\t\tmakeDefault={false} // default: true\n\t\t\t\trenderPriority={0} //  default: 1\n\t\t\t\tref={zapparCam}\n\t\t\t/>\n\t\t\t<FaceTracker\n\t\t\t\tname='FaceTracker'\n\t\t\t\tref={trackerGroup}\n\t\t\t\tonVisible={() => loadedMessageHandler()}\n\t\t\t>\n\t\t\t\t<Suspense fallback={null}>\n\t\t\t\t\t<mesh\n\t\t\t\t\t\t// visible={false}\n\t\t\t\t\t\tposition={[0, 0, 0]}\n\t\t\t\t\t\tscale={[2, 2, 2]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<FaceMeshMaterial />\n\t\t\t\t\t\t<FaceBufferGeometry\n\t\t\t\t\t\t\ttrackerGroup={trackerGroup}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</mesh>\n\t\t\t\t</Suspense>\n\t\t\t</FaceTracker>\n\n\t\t\t<OrbitControls \n\t\t\t\tenableZoom={false}\n\t\t\t\tenablePan={false}\n\t\t\t\tenableKeys={false}\n\t\t\t/>\n\t\t\t<mesh\n\t\t\t\tname='Photosphere'\n\t\t\t\tposition={[0, 0, 0]}\n\t\t\t\trotation={[0, Math.PI / 2, 0]}\n\t\t\t\tscale={[-1, 1, 1]}\n\t\t\t\t// scale={[-10, 10, 10]}\n\t\t\t\t// visible={false}\n\t\t\t>\n\t\t\t\t{/* <sphereGeometry args={[10, 32, 32, .5, 5.04539780166521, 0, 3.141592653589793]} /> */}\n\t\t\t\t<sphereGeometry args={[10, 32, 32]} />\n\t\t\t\t<meshBasicMaterial side={THREE.BackSide} map={canvasTex} />\n\t\t\t</mesh>\n\t\t</>\n\t)\n}\n","\nexport default function Text() {\n\treturn (\n\t\t<div\n\t\t\tclassName='text-container'\n\t\t>\n\t\t\t<h1 className='loaded-message'>False 3D Effect is loading...</h1>\n\t\t\t<div className='instruction-message'>\n\t\t\t\t<h1>Move your head around to gain false perspective and make the 2D background look 3D</h1>\n\t\t\t\t<span className=\"drag-message\">\n\t\t\t\t\t<img src=\"https://img.icons8.com/ios-filled/50/ffffff/resize-four-directions.png\" alt=\"drag icon\"/>\n\t\t\t\t\t<h1>Drag mouse to look around photosphere</h1>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import React from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { Stats, AdaptiveDpr, AdaptiveEvents } from '@react-three/drei'\n\n\nimport Scene from './components/Scene.js'\nimport Text from './components/Text.js'\n\nfunction App() {\n\t\n\treturn (\n\t\t<div\n\t\t\tclassName='canvas-container'\n\t\t>\n\t\t\t<Canvas\n\t\t\t\tclassName=\"webgl\"\n\t\t\t\tcamera={{ fov: 50, position: [0.3877541317884009, -0.7852562001645822, -0.4929700126621239] }}\n\t\t\t\tlinear={true}\n\t\t\t\tflat={true}\n\t\t\t>\n\t\t\t\t<Scene />\n\t\t\t\t<AdaptiveDpr pixelated />\n\t\t\t\t<AdaptiveEvents />\n\t\t\t</Canvas>\n\t\t\t<Stats className=\"stats\" />\n\n\t\t\t<div className=\"demo-container\">\n\t\t\t\t<button className=\"demo-btn demo-1\">Lake Demo</button>\n\t\t\t\t<button className=\"demo-btn demo-2\">Space Demo</button>\n\t\t\t</div>\n\t\t\t<Text />\n\t\t</div>\n    );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}